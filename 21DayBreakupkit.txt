<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>21-Day Break-Up Recovery Kit</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,700;1,400&family=Montserrat:wght@300;400;500;600&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <style>
        :root {
            --primary: #f8c6d1;
            --secondary: #f5e6e8;
            --accent: #d88c9a;
            --text: #4a4a4a;
            --light: #fff5f7;
        }
        
        body {
            font-family: 'Montserrat', sans-serif;
            background-color: var(--light);
            color: var(--text);
            min-height: 100vh;
        }
        
        h1, h2, h3, h4, .serif {
            font-family: 'Playfair Display', serif;
        }
        
        .card {
            perspective: 1000px;
            height: 200px;
            cursor: pointer;
        }
        
        .card-inner {
            position: relative;
            width: 100%;
            height: 100%;
            transition: transform 0.8s;
            transform-style: preserve-3d;
        }
        
        .card.flipped .card-inner {
            transform: rotateY(180deg);
        }
        
        .card-front, .card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        }
        
        .card-front {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: var(--text);
        }
        
        .card-back {
            background-color: white;
            transform: rotateY(180deg);
            padding: 20px;
            text-align: center;
        }
        
        .day-bubble {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .day-bubble.active {
            background-color: var(--accent);
            color: white;
        }
        
        .day-bubble.completed {
            background-color: var(--primary);
            color: var(--text);
        }
        
        .day-bubble.locked {
            background-color: #e0e0e0;
            color: #9e9e9e;
            cursor: not-allowed;
        }
        
        .content-section {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .btn {
            background-color: var(--accent);
            color: white;
            padding: 10px 20px;
            border-radius: 30px;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .btn:hover {
            background-color: #c27a88;
            transform: translateY(-2px);
        }
        
        .btn-outline {
            background-color: transparent;
            border: 2px solid var(--accent);
            color: var(--accent);
        }
        
        .btn-outline:hover {
            background-color: var(--accent);
            color: white;
        }
        
        textarea {
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 12px;
            width: 100%;
            min-height: 150px;
            font-family: 'Montserrat', sans-serif;
            resize: vertical;
        }
        
        textarea:focus {
            outline: none;
            border-color: var(--accent);
            box-shadow: 0 0 0 2px rgba(216, 140, 154, 0.2);
        }
        
        .progress-bar {
            height: 8px;
            background-color: var(--secondary);
            border-radius: 4px;
            overflow: hidden;
        }
        
        .progress-fill {
            height: 100%;
            background-color: var(--accent);
            transition: width 0.5s ease;
        }
        
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 50;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s ease;
        }
        
        .modal.show {
            opacity: 1;
            pointer-events: auto;
        }
        
        .modal-content {
            background-color: white;
            border-radius: 12px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            transform: translateY(20px);
            transition: transform 0.3s ease;
        }
        
        .modal.show .modal-content {
            transform: translateY(0);
        }
        
        .close-modal {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 24px;
            cursor: pointer;
            color: var(--text);
        }
        
        .save-indicator {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: var(--accent);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 14px;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 40;
        }
        
        .save-indicator.show {
            opacity: 1;
            animation: fadeOut 2s forwards;
            animation-delay: 1s;
        }
        
        .welcome-screen {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--light);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 100;
            transition: opacity 0.5s ease, transform 0.5s ease;
        }
        
        .welcome-screen.hide {
            opacity: 0;
            transform: translateY(-20px);
            pointer-events: none;
        }
        
        .welcome-content {
            background-color: white;
            border-radius: 16px;
            padding: 40px;
            max-width: 600px;
            width: 90%;
            text-align: center;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
        }
        
        .welcome-icon {
            font-size: 48px;
            margin-bottom: 20px;
        }
        
        .emoji-rating {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 10px;
        }
        
        .emoji-option {
            font-size: 24px;
            cursor: pointer;
            opacity: 0.5;
            transition: all 0.2s ease;
        }
        
        .emoji-option:hover, .emoji-option.selected {
            opacity: 1;
            transform: scale(1.2);
        }
        
        .youtube-fallback {
            background-color: var(--secondary);
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            cursor: pointer;
            height: 100%;
            min-height: 150px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }
        
        .youtube-fallback:hover {
            background-color: var(--primary);
        }
        
        .lock-message {
            background-color: var(--primary);
            color: var(--text);
            border-radius: 8px;
            padding: 10px 15px;
            margin-top: 10px;
            font-size: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .celebration-container {
            text-align: center;
            padding: 30px;
        }
        
        .celebration-icon {
            font-size: 64px;
            margin-bottom: 20px;
        }
        
        .completion-page {
            text-align: center;
            padding: 40px 20px;
        }
        
        .completion-icon {
            font-size: 72px;
            margin-bottom: 30px;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }
        
        @keyframes fadeOut {
            from { opacity: 1; }
            to { opacity: 0; }
        }
        
        @media (max-width: 640px) {
            .day-bubble {
                width: 30px;
                height: 30px;
                font-size: 12px;
            }
            
            .welcome-content {
                padding: 30px 20px;
            }
        }
    </style>
</head>
<body class="px-4 py-8 md:px-8">
    <!-- Welcome Screen -->
    <div id="welcome-screen" class="welcome-screen">
        <div class="welcome-content">
            <div class="welcome-icon">💗</div>
            <h1 class="text-3xl serif mb-4">Welcome to Your 21-Day Break-Up Recovery Kit</h1>
            <p class="mb-6">This journey is designed to help you heal, reflect, and rediscover yourself day by day.</p>
            
            <div class="text-left mb-6">
                <h3 class="font-semibold mb-2">Each day includes:</h3>
                <ul class="space-y-2">
                    <li class="flex items-start">
                        <span class="mr-2">✨</span>
                        <span>A flip card with a healing truth</span>
                    </li>
                    <li class="flex items-start">
                        <span class="mr-2">📝</span>
                        <span>A journal prompt for reflection</span>
                    </li>
                    <li class="flex items-start">
                        <span class="mr-2">🎬</span>
                        <span>A movie recommendation</span>
                    </li>
                    <li class="flex items-start">
                        <span class="mr-2">🎵</span>
                        <span>A song to match your mood</span>
                    </li>
                    <li class="flex items-start">
                        <span class="mr-2">✅</span>
                        <span>A simple healing activity</span>
                    </li>
                </ul>
            </div>
            
            <p class="mb-6">Your progress is automatically saved, so you can return anytime to continue your journey.</p>
            
            <button id="begin-button" class="btn px-8 py-3">Begin Day 1</button>
        </div>
    </div>

    <div class="max-w-3xl mx-auto">
        <!-- Header -->
        <header class="text-center mb-8">
            <h1 class="text-3xl md:text-4xl font-bold text-accent mb-2">21-Day Break-Up Recovery Kit</h1>
            <p class="text-gray-600">Your daily guide to healing, reflection, and empowerment</p>
        </header>
        
        <!-- Progress Tracker -->
        <div class="content-section mb-8">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-semibold">Your Journey</h3>
                <div class="flex items-center">
                    <span id="current-day-display" class="text-accent font-semibold">Day 1</span>
                    <span class="mx-2 text-gray-400">/</span>
                    <span class="text-gray-400">21</span>
                </div>
            </div>
            
            <div class="progress-bar mb-4">
                <div id="progress-fill" class="progress-fill" style="width: 4.76%"></div>
            </div>
            
            <div class="flex flex-wrap gap-2 justify-center">
                <!-- Day bubbles will be generated here -->
            </div>
            
            <div class="lock-message mt-4">
                <span class="mr-2">💗</span>
                <span>Psst... one step at a time. Finish today's entry to unlock tomorrow.</span>
            </div>
        </div>
        
        <!-- Main Content Area -->
        <div id="day-content" class="mb-8">
            <!-- Day content will be loaded here -->
        </div>
        
        <!-- Navigation -->
        <div class="flex justify-between items-center mb-8">
            <button id="prev-day" class="btn btn-outline" disabled>Previous Day</button>
            <button id="next-day" class="btn" disabled>Complete & Unlock Next Day</button>
        </div>
        
        <!-- Footer -->
        <footer class="text-center text-gray-500 text-sm mt-12">
            <p>Created with love for your healing journey</p>
            <div class="flex justify-center gap-4 mt-2">
                <button id="love-letter-btn" class="text-accent underline">Write yourself a love letter</button>
                <button id="welcome-return-btn" class="text-accent underline">Go to Welcome Page</button>
            </div>
            <p class="mt-4">© 2025 Love and Light Journals</p>
        </footer>
    </div>
    
    <!-- Love Letter Modal -->
    <div id="love-letter-modal" class="modal">
        <div class="modal-content relative">
            <span class="close-modal" onclick="toggleLoveLetterModal(false)">&times;</span>
            <h3 class="text-2xl serif mb-4">A Love Letter to Future You</h3>
            <p class="mb-4">Write a note of encouragement, hope, or love to your future self.</p>
            <textarea id="love-letter-text" placeholder="Dear Future Me..." class="mb-4"></textarea>
            <div class="flex justify-end gap-3">
                <button onclick="toggleLoveLetterModal(false)" class="btn btn-outline">Cancel</button>
                <button onclick="downloadLoveLetter()" class="btn">Download Letter</button>
                <button onclick="emailLoveLetter()" class="btn">Email to Myself</button>
            </div>
        </div>
    </div>
    
    <!-- Celebration Modal -->
    <div id="celebration-modal" class="modal">
        <div class="modal-content relative">
            <span class="close-modal" onclick="toggleCelebrationModal(false)">&times;</span>
            <div class="celebration-container">
                <div class="celebration-icon">🌟</div>
                <h3 class="text-2xl serif mb-4">You Did It!</h3>
                <p class="mb-6">21 days. 21 moments you gave back to yourself. Healing isn't a straight line—but showing up? That's everything. You've done something incredible—hold that close.</p>
                <button onclick="downloadFullJournal()" class="btn mb-4 w-full">Download Your Full Journey</button>
                <p class="text-sm text-gray-500">Your journal includes all 21 entries, completed activities, and your love letter.</p>
            </div>
        </div>
    </div>
    
    <!-- Save Indicator -->
    <div id="save-indicator" class="save-indicator">
        <span>Progress saved ✓</span>
    </div>
    
    <script>
        // Data for all 21 days
        const recoveryData = [
            {
                day: 1,
                flipCard: "If he was right for you, you wouldn't be this confused.",
                prompt: "What am I really mourning—the person or the potential?",
                watch: "Someone Great",
                listen: "Lose You to Love Me – Selena Gomez",
                listenEmbed: "https://www.youtube.com/embed/zlJDTxahav0",
                activity: "Delete photos from your Favorites album."
            },
            {
                day: 2,
                flipCard: "Heartbreak is proof you tried. That's brave.",
                prompt: "Write about the moment you knew it was over.",
                watch: "The Holiday",
                listen: "Happier – Olivia Rodrigo",
                listenEmbed: "https://www.youtube.com/embed/ZQFmRXgeR-s",
                activity: "Unfollow, mute, or block where needed."
            },
            {
                day: 3,
                flipCard: "Your heart doesn't break—it breaks open.",
                prompt: "What did you learn about yourself in this relationship?",
                watch: "Eat Pray Love",
                listen: "Stronger – Britney Spears",
                listenEmbed: "https://www.youtube.com/embed/AJWtLf4-WWs",
                activity: "Change your bedsheets and burn a calming candle."
            },
            {
                day: 4,
                flipCard: "Missing him doesn't mean you made a mistake.",
                prompt: "What would you tell your best friend if she were in your shoes?",
                watch: "Legally Blonde",
                listen: "I Will Survive – Gloria Gaynor",
                listenEmbed: "https://www.youtube.com/embed/ARt9HV9T0w8",
                activity: "Take a 20-minute walk—no phone."
            },
            {
                day: 5,
                flipCard: "Closure is a self-delivered gift.",
                prompt: "Write a letter you'll never send.",
                watch: "Clueless",
                listen: "Good as Hell – Lizzo",
                listenEmbed: "https://www.youtube.com/embed/vuq-VAiW9kw",
                activity: "Organize your closet. Toss anything that reminds you of him."
            },
            {
                day: 6,
                flipCard: "Love isn't supposed to hurt this much.",
                prompt: "List five things you deserve in your next relationship.",
                watch: "To All The Boys I've Loved Before",
                listen: "Before He Cheats – Carrie Underwood",
                listenEmbed: "https://www.youtube.com/embed/WaSy8yy-mr8",
                activity: "Try a new hairstyle—just for fun."
            },
            {
                day: 7,
                flipCard: "Healing isn't linear—but today, you showed up.",
                prompt: "What would future you thank you for doing today?",
                watch: "How Stella Got Her Groove Back",
                listen: "Survivor – Destiny's Child",
                listenEmbed: "https://www.youtube.com/embed/Wmc8bQoL-J0",
                activity: "Dance for 10 minutes like no one's watching."
            },
            {
                day: 8,
                flipCard: "This pain has purpose—it's leading you home.",
                prompt: "What does 'coming home to myself' mean to me?",
                watch: "Under the Tuscan Sun",
                listen: "Shake It Off – Taylor Swift",
                listenEmbed: "https://www.youtube.com/embed/nfWlot6h_JM",
                activity: "Cook a full meal for yourself."
            },
            {
                day: 9,
                flipCard: "Lonely and alone are not the same.",
                prompt: "What do I enjoy doing solo? When was the last time I did it?",
                watch: "The Intern",
                listen: "No Tears Left to Cry – Ariana Grande",
                listenEmbed: "https://www.youtube.com/embed/ffxKSjUwKdU",
                activity: "Treat yourself to a coffee or small indulgence."
            },
            {
                day: 10,
                flipCard: "You are not hard to love.",
                prompt: "What parts of myself did I hide in that relationship?",
                watch: "Wild",
                listen: "Truth Hurts – Lizzo",
                listenEmbed: "https://www.youtube.com/embed/P00HMxdsVZI",
                activity: "Write down three compliments to yourself."
            },
            {
                day: 11,
                flipCard: "The right person won't make you question your worth.",
                prompt: "What boundaries will I set in my next relationship?",
                watch: "500 Days of Summer",
                listen: "thank u, next – Ariana Grande",
                listenEmbed: "https://www.youtube.com/embed/gl1aHhXnN1k",
                activity: "Try a new form of exercise today."
            },
            {
                day: 12,
                flipCard: "Your healing is not on his timeline.",
                prompt: "What's one thing I'm proud of myself for today?",
                watch: "Forgetting Sarah Marshall",
                listen: "Irreplaceable – Beyoncé",
                listenEmbed: "https://www.youtube.com/embed/2EwViQxSJJQ",
                activity: "Call a friend you haven't spoken to in a while."
            },
            {
                day: 13,
                flipCard: "Sometimes the universe removes people to make room for better ones.",
                prompt: "What new opportunities have opened up since the breakup?",
                watch: "Begin Again",
                listen: "Unwritten – Natasha Bedingfield",
                listenEmbed: "https://www.youtube.com/embed/b7k0a5hYnSI",
                activity: "Try a new hobby or activity you've been curious about."
            },
            {
                day: 14,
                flipCard: "You don't need closure from him to close the door.",
                prompt: "What chapter of my life am I ready to begin?",
                watch: "Bridget Jones's Diary",
                listen: "Roar – Katy Perry",
                listenEmbed: "https://www.youtube.com/embed/CevxZvSJLk8",
                activity: "Create a vision board (digital or physical)."
            },
            {
                day: 15,
                flipCard: "The best revenge is not needing one.",
                prompt: "How have I grown stronger through this experience?",
                watch: "Girls Trip",
                listen: "Fighter – Christina Aguilera",
                listenEmbed: "https://www.youtube.com/embed/PstrAfoMKlc",
                activity: "Declutter one area of your home."
            },
            {
                day: 16,
                flipCard: "Your worth isn't determined by someone else's inability to see it.",
                prompt: "What qualities make me uniquely lovable?",
                watch: "He's Just Not That Into You",
                listen: "Praying – Kesha",
                listenEmbed: "https://www.youtube.com/embed/v-Dur3uXXCQ",
                activity: "Write a list of your personal achievements."
            },
            {
                day: 17,
                flipCard: "Sometimes the happiest ending is simply letting go.",
                prompt: "What am I ready to release today?",
                watch: "Waiting to Exhale",
                listen: "Don't Start Now – Dua Lipa",
                listenEmbed: "https://www.youtube.com/embed/oygrmJFKYZY",
                activity: "Practice a 10-minute meditation."
            },
            {
                day: 18,
                flipCard: "You're allowed to miss him and still know he wasn't right.",
                prompt: "What contradictory feelings am I experiencing today?",
                watch: "La La Land",
                listen: "We Are Never Ever Getting Back Together – Taylor Swift",
                listenEmbed: "https://www.youtube.com/embed/WA4iX5D9Z64",
                activity: "Buy yourself flowers."
            },
            {
                day: 19,
                flipCard: "The right person will never leave you wondering where you stand.",
                prompt: "What are my non-negotiables for my next relationship?",
                watch: "Mamma Mia",
                listen: "Confident – Demi Lovato",
                listenEmbed: "https://www.youtube.com/embed/cwLRQn61oUY",
                activity: "Create a self-care routine for tough days."
            },
            {
                day: 20,
                flipCard: "You were complete before him. You're complete now.",
                prompt: "What parts of myself am I rediscovering?",
                watch: "Crazy Rich Asians",
                listen: "Rise Up – Andra Day",
                listenEmbed: "https://www.youtube.com/embed/kNFRJynkQ4g",
                activity: "Write a letter to your future partner."
            },
            {
                day: 21,
                flipCard: "This isn't the end of your love story—it's just the end of a chapter.",
                prompt: "How would I describe my growth over these 21 days?",
                watch: "Eat Pray Love (rewatch with new perspective)",
                listen: "This Is Me – Keala Settle",
                listenEmbed: "https://www.youtube.com/embed/CjxugyZCfuw",
                activity: "Plan something special to celebrate your journey."
            }
        ];
        
        // Variables
        let currentDay = 1;
        let completedDays = [];
        let journalEntries = {};
        let movieRatings = {};
        let welcomeShown = false;
        let showingCompletionPage = false;
        
        // Local Storage Keys
        const STORAGE_KEY_CURRENT_DAY = 'breakupKit_currentDay';
        const STORAGE_KEY_COMPLETED_DAYS = 'breakupKit_completedDays';
        const STORAGE_KEY_JOURNAL_ENTRIES = 'breakupKit_journalEntries';
        const STORAGE_KEY_MOVIE_RATINGS = 'breakupKit_movieRatings';
        const STORAGE_KEY_WELCOME_SHOWN = 'breakupKit_welcomeShown';
        const STORAGE_KEY_LOVE_LETTER = 'breakupKit_loveLetter';
        
        // Initialize the app
        document.addEventListener('DOMContentLoaded', function() {
            loadSavedProgress();
            createDayBubbles();
            
            // Check if welcome screen should be shown
            if (!welcomeShown) {
                const welcomeScreen = document.getElementById('welcome-screen');
                welcomeScreen.style.display = 'flex';
                welcomeScreen.classList.remove('hide');
                // Don't load day content yet - wait for begin button
            } else {
                const welcomeScreen = document.getElementById('welcome-screen');
                welcomeScreen.style.display = 'none';
                // Load content immediately if welcome was already shown
                if (completedDays.includes(21) && currentDay > 21) {
                    showCompletionPage();
                } else {
                    loadDayContent(currentDay);
                }
                updateProgressBar();
            }
            
            // Event listeners
            document.getElementById('prev-day').addEventListener('click', goToPreviousDay);
            document.getElementById('next-day').addEventListener('click', handleNextDayClick);
            document.getElementById('love-letter-btn').addEventListener('click', () => toggleLoveLetterModal(true));
            document.getElementById('welcome-return-btn').addEventListener('click', returnToWelcome);
            document.getElementById('begin-button').addEventListener('click', beginJourney);
        });
        
        // Return to welcome screen
        function returnToWelcome() {
            // Save current state first
            const journalEntry = document.getElementById('journal-entry');
            if (journalEntry) {
                saveJournalEntry(currentDay, journalEntry.value);
            }
            
            // Show welcome screen
            const welcomeScreen = document.getElementById('welcome-screen');
            welcomeScreen.style.display = 'flex';
            welcomeScreen.classList.remove('hide');
            
            // Reset welcome shown status so it stays visible
            welcomeShown = false;
            localStorage.setItem(STORAGE_KEY_WELCOME_SHOWN, 'false');
        }
        
        // Begin the journey (close welcome screen)
        function beginJourney() {
            // Immediately hide the welcome screen
            const welcomeScreen = document.getElementById('welcome-screen');
            welcomeScreen.style.display = 'none';
            
            // Set welcome as shown
            welcomeShown = true;
            localStorage.setItem(STORAGE_KEY_WELCOME_SHOWN, 'true');
            
            // Immediately load content
            if (completedDays.includes(21) && currentDay > 21) {
                showCompletionPage();
            } else {
                loadDayContent(currentDay);
            }
            updateProgressBar();
            updateDayBubbles();
        }
        
        // Load saved progress from local storage
        function loadSavedProgress() {
            try {
                // Load welcome screen status
                const savedWelcomeShown = localStorage.getItem(STORAGE_KEY_WELCOME_SHOWN);
                if (savedWelcomeShown) {
                    welcomeShown = savedWelcomeShown === 'true';
                }
                
                // Load current day
                const savedCurrentDay = localStorage.getItem(STORAGE_KEY_CURRENT_DAY);
                if (savedCurrentDay) {
                    currentDay = parseInt(savedCurrentDay);
                }
                
                // Load completed days
                const savedCompletedDays = localStorage.getItem(STORAGE_KEY_COMPLETED_DAYS);
                if (savedCompletedDays) {
                    completedDays = JSON.parse(savedCompletedDays);
                }
                
                // Load journal entries
                const savedJournalEntries = localStorage.getItem(STORAGE_KEY_JOURNAL_ENTRIES);
                if (savedJournalEntries) {
                    journalEntries = JSON.parse(savedJournalEntries);
                }
                
                // Load movie ratings
                const savedMovieRatings = localStorage.getItem(STORAGE_KEY_MOVIE_RATINGS);
                if (savedMovieRatings) {
                    movieRatings = JSON.parse(savedMovieRatings);
                }
            } catch (error) {
                console.error('Error loading saved progress:', error);
            }
        }
        
        // Save progress to local storage
        function saveProgress() {
            try {
                localStorage.setItem(STORAGE_KEY_CURRENT_DAY, currentDay.toString());
                localStorage.setItem(STORAGE_KEY_COMPLETED_DAYS, JSON.stringify(completedDays));
                localStorage.setItem(STORAGE_KEY_JOURNAL_ENTRIES, JSON.stringify(journalEntries));
                localStorage.setItem(STORAGE_KEY_MOVIE_RATINGS, JSON.stringify(movieRatings));
                
                // Show save indicator
                showSaveIndicator();
            } catch (error) {
                console.error('Error saving progress:', error);
            }
        }
        
        // Show save indicator
        function showSaveIndicator() {
            const indicator = document.getElementById('save-indicator');
            indicator.classList.add('show');
            
            setTimeout(() => {
                indicator.classList.remove('show');
            }, 3000);
        }
        
        // Create day bubbles for progress tracking
        function createDayBubbles() {
            const container = document.querySelector('.flex.flex-wrap');
            container.innerHTML = ''; // Clear existing bubbles
            
            for (let i = 1; i <= 21; i++) {
                const bubble = document.createElement('div');
                bubble.className = i === currentDay ? 'day-bubble active' : (completedDays.includes(i) || i < currentDay ? 'day-bubble completed' : 'day-bubble locked');
                bubble.textContent = i;
                bubble.setAttribute('data-day', i);
                
                if (i <= Math.max(...completedDays, currentDay)) {
                    bubble.addEventListener('click', () => {
                        navigateToDay(i);
                    });
                }
                
                container.appendChild(bubble);
            }
        }
        
        // Update day bubbles based on current day
        function updateDayBubbles() {
            const bubbles = document.querySelectorAll('.day-bubble');
            
            bubbles.forEach(bubble => {
                const day = parseInt(bubble.getAttribute('data-day'));
                
                if (day === currentDay) {
                    bubble.className = 'day-bubble active';
                } else if (completedDays.includes(day) || day < currentDay) {
                    bubble.className = 'day-bubble completed';
                    
                    // Ensure completed days are clickable
                    if (!bubble.hasEventListener) {
                        bubble.addEventListener('click', () => navigateToDay(day));
                        bubble.hasEventListener = true;
                    }
                } else {
                    bubble.className = 'day-bubble locked';
                }
            });
        }
        
        // Show completion page
        function showCompletionPage() {
            showingCompletionPage = true;
            
            const container = document.getElementById('day-content');
            container.innerHTML = `
                <div class="content-section completion-page">
                    <div class="completion-icon">💗</div>
                    <h2 class="text-3xl serif mb-6">Journey Complete</h2>
                    
                    <p class="text-lg mb-8">21 days. 21 moments you gave back to yourself. Healing isn't a straight line—but showing up? That's everything. You've done something incredible—hold that close.</p>
                    
                    <div class="mb-8">
                        <button onclick="downloadFullJournal()" class="btn px-8 py-3 mb-4">Download Your Full Journey</button>
                        <p class="text-sm text-gray-500">Your journal includes all 21 entries, completed activities, your love letter, and movie ratings.</p>
                    </div>
                    
                    <div class="border-t border-b border-gray-200 py-6 my-8">
                        <h3 class="text-xl serif mb-4">What's Next?</h3>
                        <p class="mb-4">Your healing journey doesn't end here. Continue to nurture yourself and celebrate how far you've come.</p>
                        <p>Remember that you can always revisit any day of your journey by clicking on the day bubbles above.</p>
                    </div>
                    
                    <div>
                        <button id="love-letter-completion-btn" class="btn btn-outline px-6 py-2">Write a Final Love Letter</button>
                    </div>
                </div>
            `;
            
            // Update navigation buttons
            document.getElementById('prev-day').disabled = false;
            document.getElementById('next-day').style.display = 'none';
            
            // Add event listener for love letter button
            document.getElementById('love-letter-completion-btn').addEventListener('click', () => toggleLoveLetterModal(true));
            
            // Update day display
            document.getElementById('current-day-display').textContent = 'Complete';
        }
        
        // Load content for the current day
        function loadDayContent(day) {
            showingCompletionPage = false;
            
            const dayData = recoveryData[day - 1];
            const container = document.getElementById('day-content');
            
            // Update day display
            document.getElementById('current-day-display').textContent = `Day ${day}`;
            
            // Get saved journal entry for this day
            const savedJournalEntry = journalEntries[day] || '';
            
            // Get saved movie rating for this day
            const savedMovieRating = movieRatings[day] || '';
            
            // Create content
            container.innerHTML = `
                <div class="content-section mb-6">
                    <h2 class="text-2xl serif mb-4">Day ${day}: Your Daily Dose of Healing</h2>
                    
                    <!-- Flip Card -->
                    <div class="card mb-8" onclick="this.classList.toggle('flipped')">
                        <div class="card-inner">
                            <div class="card-front">
                                <h3 class="serif text-xl">Tap to reveal today's truth</h3>
                            </div>
                            <div class="card-back">
                                <p class="serif text-xl">"${dayData.flipCard}"</p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Journal Prompt -->
                    <div class="mb-8">
                        <h3 class="text-lg font-semibold mb-3">Today's Journal Prompt:</h3>
                        <p class="italic mb-4">${dayData.prompt}</p>
                        <textarea id="journal-entry" placeholder="Start writing here..." class="w-full">${savedJournalEntry}</textarea>
                        <div class="flex justify-end mt-2">
                            <button onclick="downloadJournalEntry(${day})" class="btn btn-outline text-sm">Download Entry</button>
                        </div>
                    </div>
                    
                    <!-- Media Recommendations -->
                    <div class="grid md:grid-cols-2 gap-6 mb-6">
                        <div>
                            <h3 class="text-lg font-semibold mb-3">Watch Today:</h3>
                            <div class="bg-secondary bg-opacity-50 p-4 rounded-lg">
                                <p class="font-medium">${dayData.watch}</p>
                                <p class="text-sm text-gray-600 mt-1">Find it on your favorite streaming platform</p>
                                
                                <!-- Movie Rating -->
                                <div class="mt-3">
                                    <p class="text-sm mb-1">How did the movie make you feel?</p>
                                    <div class="emoji-rating" data-day="${day}">
                                        <span class="emoji-option ${savedMovieRating === '😴' ? 'selected' : ''}" data-emoji="😴" onclick="rateMovie(${day}, '😴')">😴</span>
                                        <span class="emoji-option ${savedMovieRating === '😐' ? 'selected' : ''}" data-emoji="😐" onclick="rateMovie(${day}, '😐')">😐</span>
                                        <span class="emoji-option ${savedMovieRating === '🙂' ? 'selected' : ''}" data-emoji="🙂" onclick="rateMovie(${day}, '🙂')">🙂</span>
                                        <span class="emoji-option ${savedMovieRating === '😊' ? 'selected' : ''}" data-emoji="😊" onclick="rateMovie(${day}, '😊')">😊</span>
                                        <span class="emoji-option ${savedMovieRating === '🤩' ? 'selected' : ''}" data-emoji="🤩" onclick="rateMovie(${day}, '🤩')">🤩</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div>
                            <h3 class="text-lg font-semibold mb-3">Listen Today:</h3>
                            <div class="bg-secondary bg-opacity-50 p-4 rounded-lg">
                                <p class="font-medium">${dayData.listen}</p>
                                <div class="mt-3 aspect-video" id="youtube-container-${day}">
                                    ${createYoutubeEmbed(dayData.listenEmbed, day)}
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Activity -->
                    <div>
                        <h3 class="text-lg font-semibold mb-3">Today's Healing Activity:</h3>
                        <div class="bg-primary bg-opacity-30 p-4 rounded-lg">
                            <p class="font-medium">${dayData.activity}</p>
                            <div class="mt-3 flex items-center">
                                <input type="checkbox" id="activity-done" class="w-5 h-5 mr-2" ${completedDays.includes(day) ? 'checked' : ''}>
                                <label for="activity-done">I've completed this activity</label>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            // Update navigation buttons
            updateNavigationButtons();
            
            // Add event listener to save journal entry when typing
            const journalTextarea = document.getElementById('journal-entry');
            if (journalTextarea) {
                journalTextarea.addEventListener('input', () => {
                    saveJournalEntry(day, journalTextarea.value);
                });
            }
            
            // Show next-day button if it was hidden
            document.getElementById('next-day').style.display = 'block';
        }
        
        // Create YouTube embed with fallback
        function createYoutubeEmbed(embedUrl, day) {
            return `
                <div class="youtube-fallback" onclick="window.open('${embedUrl.replace('embed/', 'watch?v=')}', '_blank')">
                    <div class="text-2xl mb-2">🎵</div>
                    <p class="font-medium">Enjoy this song on YouTube</p>
                    <p class="text-sm mt-2 text-accent">Click to listen</p>
                </div>
            `;
        }
        
        // Rate a movie
        function rateMovie(day, emoji) {
            // Update the UI
            const emojiOptions = document.querySelectorAll(`.emoji-rating[data-day="${day}"] .emoji-option`);
            emojiOptions.forEach(option => {
                if (option.getAttribute('data-emoji') === emoji) {
                    option.classList.add('selected');
                } else {
                    option.classList.remove('selected');
                }
            });
            
            // Save the rating
            movieRatings[day] = emoji;
            saveProgress();
        }
        
        // Save journal entry for a specific day
        function saveJournalEntry(day, text) {
            journalEntries[day] = text;
            saveProgress();
        }
        
        // Update navigation buttons based on current day
        function updateNavigationButtons() {
            const prevButton = document.getElementById('prev-day');
            const nextButton = document.getElementById('next-day');
            
            // Previous button is enabled if not on day 1
            prevButton.disabled = currentDay === 1;
            
            // Next button is enabled if current day is completed or if we're viewing a past day
            const activityCheckbox = document.getElementById('activity-done');
            const journalEntry = document.getElementById('journal-entry');
            
            if (completedDays.includes(currentDay)) {
                nextButton.disabled = false;
                
                if (currentDay === 21) {
                    nextButton.textContent = 'Complete Journey';
                } else {
                    nextButton.textContent = 'Next Day';
                }
            } else {
                if (currentDay === 21) {
                    nextButton.disabled = !(activityCheckbox && activityCheckbox.checked && journalEntry && journalEntry.value.trim().length > 0);
                    nextButton.textContent = 'Complete Journey';
                } else {
                    nextButton.disabled = !(activityCheckbox && activityCheckbox.checked && journalEntry && journalEntry.value.trim().length > 0);
                    nextButton.textContent = 'Complete & Unlock Next Day';
                }
                
                // Add event listeners to enable/disable next button
                if (activityCheckbox && journalEntry) {
                    activityCheckbox.addEventListener('change', updateNextButtonState);
                    journalEntry.addEventListener('input', updateNextButtonState);
                }
            }
        }
        
        // Update next button state based on activity and journal
        function updateNextButtonState() {
            const nextButton = document.getElementById('next-day');
            const activityCheckbox = document.getElementById('activity-done');
            const journalEntry = document.getElementById('journal-entry');
            
            if (activityCheckbox && journalEntry) {
                nextButton.disabled = !(activityCheckbox.checked && journalEntry.value.trim().length > 0);
            }
        }
        
        // Handle next day button click
        function handleNextDayClick() {
            if (currentDay === 21 && !showingCompletionPage) {
                completeAndUnlockNextDay();
            } else if (completedDays.includes(currentDay)) {
                navigateToDay(currentDay + 1);
            } else {
                completeAndUnlockNextDay();
            }
        }
        
        // Navigate to a specific day
        function navigateToDay(day) {
            if (day < 1 || day > 21) return;
            
            // If showing completion page and navigating to a day
            if (showingCompletionPage) {
                showingCompletionPage = false;
                document.getElementById('next-day').style.display = 'block';
            }
            
            // Save current journal entry before navigating
            const currentJournalEntry = document.getElementById('journal-entry');
            if (currentJournalEntry) {
                saveJournalEntry(currentDay, currentJournalEntry.value);
            }
            
            currentDay = day;
            loadDayContent(currentDay);
            updateDayBubbles();
            updateProgressBar();
            saveProgress();
        }
        
        // Go to previous day
        function goToPreviousDay() {
            if (showingCompletionPage) {
                navigateToDay(21);
            } else if (currentDay > 1) {
                navigateToDay(currentDay - 1);
            }
        }
        
        // Complete current day and unlock next
        function completeAndUnlockNextDay() {
            // Save current journal entry
            const journalEntry = document.getElementById('journal-entry');
            if (journalEntry) {
                saveJournalEntry(currentDay, journalEntry.value);
            }
            
            if (!completedDays.includes(currentDay)) {
                completedDays.push(currentDay);
            }
            
            if (currentDay < 21) {
                navigateToDay(currentDay + 1);
            } else {
                // Mark day 21 as completed
                if (!completedDays.includes(21)) {
                    completedDays.push(21);
                }
                
                // Set current day to 22 to indicate completion
                currentDay = 22;
                saveProgress();
                
                // Show completion page
                showCompletionPage();
                updateDayBubbles();
                updateProgressBar();
            }
        }
        
        // Update progress bar
        function updateProgressBar() {
            const progress = (Math.max(completedDays.length, 0) / 21) * 100;
            document.getElementById('progress-fill').style.width = `${progress}%`;
        }
        
        // Toggle love letter modal
        function toggleLoveLetterModal(show) {
            const modal = document.getElementById('love-letter-modal');
            if (show) {
                // Load saved love letter if exists
                const savedLoveLetter = localStorage.getItem(STORAGE_KEY_LOVE_LETTER) || '';
                document.getElementById('love-letter-text').value = savedLoveLetter;
                modal.classList.add('show');
            } else {
                modal.classList.remove('show');
            }
        }
        
        // Toggle celebration modal
        function toggleCelebrationModal(show) {
            const modal = document.getElementById('celebration-modal');
            if (show) {
                modal.classList.add('show');
            } else {
                modal.classList.remove('show');
            }
        }
        
        // Download love letter
        function downloadLoveLetter() {
            const text = document.getElementById('love-letter-text').value;
            if (!text.trim()) {
                alert("Please write something in your love letter before downloading.");
                return;
            }
            
            // Save love letter to local storage
            localStorage.setItem(STORAGE_KEY_LOVE_LETTER, text);
            
            const date = new Date().toLocaleDateString();
            const filename = `Love_Letter_${date.replace(/\//g, '-')}.txt`;
            downloadTextFile(text, filename);
            toggleLoveLetterModal(false);
        }
        
        // Email love letter
        function emailLoveLetter() {
            const text = document.getElementById('love-letter-text').value;
            if (!text.trim()) {
                alert("Please write something in your love letter before sending.");
                return;
            }
            
            // Save love letter to local storage
            localStorage.setItem(STORAGE_KEY_LOVE_LETTER, text);
            
            const subject = "A Love Letter to My Future Self";
            const body = encodeURIComponent(text);
            window.location.href = `mailto:?subject=${subject}&body=${body}`;
            toggleLoveLetterModal(false);
        }
        
        // Download journal entry
        function downloadJournalEntry(day) {
            const text = document.getElementById('journal-entry').value;
            if (!text.trim()) {
                alert("Please write something in your journal before downloading.");
                return;
            }
            
            const date = new Date().toLocaleDateString();
            const filename = `Journal_Day${day}_${date.replace(/\//g, '-')}.txt`;
            downloadTextFile(text, filename);
        }
        
        // Download full journal as styled PDF
        function downloadFullJournal() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            
            // Set up colors and fonts
            const primaryColor = [248, 198, 209]; // #f8c6d1
            const accentColor = [216, 140, 154]; // #d88c9a
            const textColor = [74, 74, 74]; // #4a4a4a
            
            let yPosition = 20;
            const pageHeight = doc.internal.pageSize.height;
            const margin = 20;
            const lineHeight = 7;
            
            // Helper function to add new page if needed
            function checkPageBreak(additionalHeight = 20) {
                if (yPosition + additionalHeight > pageHeight - margin) {
                    doc.addPage();
                    yPosition = margin;
                }
            }
            
            // Helper function to add background rectangle
            function addBackground(y, height) {
                doc.setFillColor(...primaryColor);
                doc.rect(margin - 5, y - 5, doc.internal.pageSize.width - 2 * margin + 10, height, 'F');
            }
            
            
            yPosition += 15;
            doc.setFontSize(16);
            doc.setTextColor(...textColor);
            doc.text('Your Personal Healing Journey', 105, yPosition, { align: 'center' });
            
            yPosition += 20;
            doc.setFontSize(12);
            const completionDate = new Date().toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            });
            doc.text('Completed: ' + completionDate, 105, yPosition, { align: 'center' });
            
            yPosition += 30;
            
            // Add all journal entries
            for (let i = 1; i <= 21; i++) {
                const entry = journalEntries[i] || '';
                const dayData = recoveryData[i - 1];
                
                checkPageBreak(40);
                
                // Day header with background
                addBackground(yPosition, 15);
                doc.setFontSize(16);
                doc.setTextColor(255, 255, 255);
                doc.text(`Day ${i}`, margin, yPosition + 8);
                
                yPosition += 20;
                
                // Truth card
                doc.setFontSize(12);
                doc.setTextColor(...accentColor);
                doc.text('Daily Truth:', margin, yPosition);
                
                yPosition += lineHeight;
                doc.setTextColor(...textColor);
                doc.setFontSize(11);
                const truthLines = doc.splitTextToSize('"' + dayData.flipCard + '"', 170);
                doc.text(truthLines, margin, yPosition);
                yPosition += truthLines.length * lineHeight + 5;
                
                // Prompt
                checkPageBreak(20);
                doc.setFontSize(12);
                doc.setTextColor(...accentColor);
                doc.text('Journal Prompt:', margin, yPosition);
                
                yPosition += lineHeight;
                doc.setTextColor(...textColor);
                doc.setFontSize(11);
                const promptLines = doc.splitTextToSize(dayData.prompt, 170);
                doc.text(promptLines, margin, yPosition);
                yPosition += promptLines.length * lineHeight + 5;
                
                // Journal entry
                if (entry.trim()) {
                    checkPageBreak(20);
                    doc.setFontSize(12);
                    doc.setTextColor(...accentColor);
                    doc.text('My Reflection:', margin, yPosition);
                    
                    yPosition += lineHeight;
                    doc.setTextColor(...textColor);
                    doc.setFontSize(10);
                    const entryLines = doc.splitTextToSize(entry, 170);
                    
                    for (let line of entryLines) {
                        checkPageBreak(10);
                        doc.text(line, margin, yPosition);
                        yPosition += lineHeight;
                    }
                    yPosition += 5;
                }
                
                // Activity
                checkPageBreak(15);
                doc.setFontSize(12);
                doc.setTextColor(...accentColor);
                doc.text('Healing Activity:', margin, yPosition);
                
                yPosition += lineHeight;
                doc.setTextColor(...textColor);
                doc.setFontSize(11);
                const activityLines = doc.splitTextToSize(dayData.activity, 170);
                doc.text(activityLines, margin, yPosition);
                yPosition += activityLines.length * lineHeight;
                
                // Movie rating if available
                if (movieRatings[i]) {
                    yPosition += 3;
                    doc.setFontSize(10);
                    doc.setTextColor(...accentColor);
                    doc.text('Movie "' + dayData.watch + '" made me feel: ' + movieRatings[i], margin, yPosition);
                    yPosition += lineHeight;
                }
                
                yPosition += 15;
            }
            
            // Add love letter if available
            const loveLetter = localStorage.getItem(STORAGE_KEY_LOVE_LETTER);
            if (loveLetter && loveLetter.trim()) {
                checkPageBreak(40);
                
                // Love letter header
                addBackground(yPosition, 15);
                doc.setFontSize(16);
                doc.setTextColor(255, 255, 255);
                doc.text('Love Letter to Future Me', margin, yPosition + 8);
                
                yPosition += 25;
                doc.setTextColor(...textColor);
                doc.setFontSize(11);
                const letterLines = doc.splitTextToSize(loveLetter, 170);
                
                for (let line of letterLines) {
                    checkPageBreak(10);
                    doc.text(line, margin, yPosition);
                    yPosition += lineHeight;
                }
                yPosition += 15;
            }
            
            // Final page - completion message
            checkPageBreak(60);
            doc.setFontSize(16);
            doc.setTextColor(...accentColor);
            doc.text('Journey Complete', 105, yPosition, { align: 'center' });
            
            yPosition += 15;
            doc.setFontSize(12);
            doc.setTextColor(...textColor);
            const finalMessage = [
                'Congratulations on completing your 21-day healing journey!',
                '',
                'Remember: healing isn\'t a straight line—but showing up?',
                'That\'s everything. You\'ve done something incredible—hold that close.',
                '',
                'With love,',
                'Your Recovery Kit'
            ];
            
            finalMessage.forEach(line => {
                doc.text(line, 105, yPosition, { align: 'center' });
                yPosition += lineHeight + 2;
            });
            
            // Save the PDF
            const date = new Date().toLocaleDateString().replace(/\//g, '-');
            const filename = `Recovery_Journey_${date}.pdf`;
            doc.save(filename);
        }
        
        // Helper function to download text file
        function downloadTextFile(text, filename) {
            const element = document.createElement('a');
            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
            element.setAttribute('download', filename);
            element.style.display = 'none';
            document.body.appendChild(element);
            element.click();
            document.body.removeChild(element);
        }
    </script>
</body>
</html>